name: Build project
description: Setup dependencies and build library and CLI
inputs:
  python-version:
    description: Python version for Windows builds
    default: '3.12'
runs:
  using: composite
  steps:
    - name: Setup dependencies (Linux/macOS)
      if: runner.os != 'Windows'
      shell: bash
      run: |
        if [ "$RUNNER_OS" = "macOS" ]; then
          brew update
          brew install cmake gcc make python3 zip pyinstaller
        else
          sudo apt update
          sudo apt install -y cmake gcc make python3 python3-pip zip
          pip3 install pyinstaller
        fi
    - name: Setup dependencies (Windows)
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        choco install cmake -y
        choco install make -y
        python -m pip install pyinstaller
    - name: Setup Python (Windows)
      if: runner.os == 'Windows'
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
    - name: Build library
      shell: bash
      run: |
        cd lib/libwconr
        rm -rf build || true
        if [ "$RUNNER_OS" = "Windows" ]; then
          cmake -S . -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release
        else
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release
        fi
    - name: Build executable
      shell: bash
      run: |
        if [ "$RUNNER_OS" = "Windows" ]; then
          powershell.exe -File compile_windows.ps1
        else
          chmod +x compile_linux.sh
          ./compile_linux.sh
        fi