name: WinConveyoR

on:
  push:
    branches-ignore:
      - 'ga-ignore-**'
  pull_request:
    branches-ignore:
      - 'ga-ignore-**'

permissions:
  contents: write
  discussions: write

env:
  BINARIES_POSIX: "./cli/dist/wcr ./lib/libwconr/libwconr.so"
  BINARIES_NT: "./cli/dist/wcr.exe, ./lib/libwconr/libwconr.dll"

jobs:
  check_build:
    runs-on: ubuntu-latest

    if: ${{ github.event_name == 'push' }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install build tools
        run: sudo apt install -y gcc libc6-dev make python3 python3-pip

      - name: Install pyinstaller
        run: pip install pyinstaller

      - name: clean objects
        run: |
          make clean

      - name: compile project
        run: |
          chmod +x ./compile_linux.sh; ./compile_linux.sh

      - name: test file exist
        run: |
          for binary in $(echo "${{ env.BINARIES_POSIX }}" | tr ',' ' '); do
            if [ ! -f "${binary}" ]; then
              echo "Binary ${binary} doesn't exist."
              exit 1
            fi
          done

      - name: remove caches
        run: make fclean

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: false

  build_release:
    name: Build Release
    needs: create_release
    if: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            release_suffix: ubuntu
          - os: macos-latest
            release_suffix: mac
          - os: windows-latest
            release_suffix: windows

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Linux Build
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt install gcc libc6-dev make python3 python3-pip zip;
          pip install pyinstaller;

          sh compile_linux.sh;
          zip -j release_ubuntu.zip ${{ env.BINARIES_POSIX }}

      - name: Run Mac Build
        if: matrix.os == 'macos-latest'
        run: |
          brew install gcc make python3 pyinstaller zip;
          PATH="/opt/homebrew/opt/make/libexec/gnubin:$PATH";

          sh compile_linux.sh;
          zip -j release_mac.zip ${{ env.BINARIES_POSIX }}

      - name: Run Windows Build
        if: matrix.os == 'windows-latest'
        run: |
          choco install make -y;
          pip install pyinstaller;

          type ./compile_windows.ps1 | powershell.exe;
          Compress-Archive -Path ${{ env.BINARIES_NT }} -DestinationPath release_windows.zip

      - name: Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          files: release_${{ matrix.release_suffix }}.zip
