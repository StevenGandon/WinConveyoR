name: WinConveyoR

on:
  push:
    branches-ignore:
      - 'ga-ignore-**'
  pull_request:
    branches-ignore:
      - 'ga-ignore-**'

env:
  BINARIES_POSIX: "./cli/dist/wcr ./lib/libwconr/Release/libwconr.so"
  BINARIES_NT: "'./cli/dist/wcr.exe', './lib/libwconr/Release/libwconr.dll'"

jobs:
  check_build:
    if: ${{ github.event_name == 'push' && github.ref_name != 'main' }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Dependencies (Linux/Mac)
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          if [ "$(uname)" = "Darwin" ]; then
            brew update || true;
            brew install cmake gcc make python3;
          else
            sudo apt update
            sudo apt install -y cmake gcc make python3
          fi

      - name: Setup Dependencies (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          choco install cmake -y
          choco install make -y

      - name: Build Library (CMake)
        shell: bash
        run: |
          cd lib/libwconr
          rm -rf build || true
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cmake -S . -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release
          else
            cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
          fi
          cmake --build build --config Release

      - name: Build Executable
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            sudo apt update
            sudo apt install -y python3 python3-pip make
            pip3 install pyinstaller
            chmod +x compile_linux.sh
            ./compile_linux.sh
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            brew install pyinstaller
            chmod +x compile_linux.sh
            ./compile_linux.sh
          else
            powershell.exe -File compile_windows.ps1
          fi

      - name: Verify Binaries on Windows
        if: ${{ matrix.os == 'windows-latest' }}
        shell: powershell
        run: |
          if (-Not (Test-Path -Path "./cli/dist/wcr.exe" -PathType Leaf)) { 
            Write-Error "Binary ./cli/dist/wcr.exe doesn't exist."; 
            exit 1 
          }
          if (-Not (Test-Path -Path "./lib/libwconr/libwconr.dll" -PathType Leaf)) { 
            Write-Error "Binary ./lib/libwconr/libwconr.dll doesn't exist."; 
            exit 1 
          }

      - name: Verify Binaries on Linux/Mac
        if: ${{ matrix.os != 'windows-latest' }}
        shell: bash
        run: |
          for binary in $(echo "${{ env.BINARIES_POSIX }}" | tr ' ' '\n'); do
            if [ "$(uname)" = "Darwin" ]; then
              binary=$(echo "$binary" | sed 's/\.so$/\.dylib/')
            fi
            if [ ! -f "$binary" ]; then
              echo "Binary $binary doesn't exist."
              exit 1
            fi
          done

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: false

  build_release:
    name: Build Release
    needs: create_release
    if: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            release_suffix: ubuntu
          - os: macos-latest
            release_suffix: mac
          - os: windows-latest
            release_suffix: windows
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Dependencies (Linux/Mac - Release)
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          if [ "$(uname)" = "Darwin" ]; then
            brew update
            brew install cmake gcc make python3 zip
          else
            sudo apt update
            sudo apt install -y cmake gcc make python3 zip
          fi

      - name: Setup Dependencies (Windows - Release)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          choco install cmake -y
          choco install make -y

      - name: Package Release
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            powershell.exe -Command "Compress-Archive -Path $Env:BINARIES_NT -DestinationPath release_windows.zip"
          else
            zip -j release_${{ matrix.release_suffix }}.zip ${{ env.BINARIES_POSIX }}
          fi

      - name: Publish Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            ${{ matrix.os == 'ubuntu-latest' && 'release_ubuntu.zip' || '' }}
            ${{ matrix.os == 'macos-latest' && 'release_mac.zip' || '' }}
            ${{ matrix.os == 'windows-latest' && 'release_windows.zip' || '' }}
